[
  // alt+j|k to switch between editors in a group.
  // alt+h|l to switch between the groups themselves.
  {
    "key": "alt+l",
    "command": "-toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "alt+h",
    "command": "-testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.previousEditorInGroup"
  },
  //alt+down/up moves the editor up/down within the group.
  //alt+left/right moves the editor to the next/previous group.
  {
    "key": "ctrl+alt+right",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+alt+left",
    "command": "-workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+shift+pageup",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+shift+pagedown",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "alt+left",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "alt+up",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "alt+down",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  // ctrl+z formats the file.
  {
    "key": "ctrl+z",
    "command": "-undo"
  },
  {
    "key": "ctrl+z",
    "command": "-editor.action.customEditor.undo",
    "when": "focusedCustomEditorIsEditable && !inputFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+z",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  // ctrl+2 stages the selected range.
  {
    "key": "ctrl+2",
    "command": "git.stageSelectedRanges",
    "when": "editorTextFocus && editorHasSelection"
  },
  {
    "key": "ctrl+k ctrl+alt+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor"
  },
  // ctrl+3 opens file diff and moves to next hunk.
  {
    "key": "ctrl+3",
    "command": "git.openChange",
    "when": "editorFocus && !isInDiffEditor"
  },
  {
    "key": "ctrl+k ctrl+3",
    "command": "-editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+3",
    "command": "-workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "editorFocus && isInDiffEditor"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  // ctrl+e only acts on the vim extension. 
  {
    "key": "ctrl+e",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "ctrl+e",
    "command": "extension.vim_ctrl+e",
    "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  // alt+q closes the open file.
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "delete",
    "command": "-workbench.action.terminal.killActiveTab",
    "when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "alt+q",
    "command": "workbench.action.closeActiveEditor"
  },
  // alt+g opens file search.
  {
    "key": "alt+g",
    "command": "workbench.action.quickOpen"
  },
  // ctrl+hjkl for scope based cursor movement.
  {
    "key": "ctrl+h",
    "command": "scope-navigator.ascend"
  },
  {
    "key": "ctrl+j",
    "command": "scope-navigator.next-branch"
  },
  {
    "key": "ctrl+k",
    "command": "scope-navigator.previous-branch"
  },
  {
    "key": "ctrl+l",
    "command": "scope-navigator.descend"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+j",
    "command": "-extension.vim_ctrl+j"
  },
  {
    "key": "ctrl+k",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+k ctrl+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+k ctrl+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k"
  },
  {
    "key": "ctrl+k ctrl+pagedown",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+k ctrl+pageup",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "right",
    "command": "-cursorRight",
    "when": "textInputFocus"
  },
  // Arrow key debugging
  {
    "key": "right",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "down",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "left",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "up",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  }
]